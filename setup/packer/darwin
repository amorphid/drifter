#!/usr/bin/env bash

set -x

# calculate latest version && set it
VERSION="$(curl -L https://releases.hashicorp.com/packer/ | grep -o 'packer_[0-9]\+\.[0-9]\+\.[0-9]\+' | sort | tail -n 1 | cut -d '_' -f 2)"
if [[ "$VERSION" =~ [0-9]+.[0-9]+.[0-9]+ ]] ; then
  echo "latest version of Packer appears to be $VERSION"
else
  echo "unable to determine version"
  exit 1
fi

# assemble url & set it
URL="https://releases.hashicorp.com/packer/""${VERSION}""/packer_""${VERSION}""_darwin_amd64.zip"
echo "download URL is $URL"

# assemble install directory & set it
DIR="/opt/packer-$VERSION"
echo "install directory is $DIR"

# if directory exists, delete it
if [ -f "${DIR}" ] ; then
  sudo rm -rf "${DIR}"
  echo "Cleaned up previous copy of $DIR"
fi

# create directory
sudo mkdir -p "${DIR}"
echo "created $DIR"

# assemble install directory & set it
FILE="/tmp/packer-$VERSION"
echo "temp file is $FILE"

# if old copy of file, delete it
if [ -f "${FILE}" ] ; then
  sudo rm "${FILE}"
  echo "Cleaned up previous copy of $FILE"
fi

# download file
curl -L -o "${FILE}" "${URL}"
echo "Packer appears to have downloaded"

# decompress downloaded file
if sudo unzip -f -d "${DIR}" "${FILE}" ; then
  echo "$FILE contents extraced to directory $DIR"
else
  echo "unable to extract files from ${FILE}"
  exit 1
fi

# create symlink for packer
if bash -c "sudo ln -fs $DIR/packer /usr/local/bin/packer" ; then
  echo "symlink for /usr/local/bin/packer created"
else
  echo "unable to create symlink"
  exit 1
fi

# delete temp file
sudo rm "${FILE}"
echo "Deleted temp file $FILE"

# log completion
if [[ "$(packer -v)" =~ "$VERSION" ]] ; then
  echo "Packer v$VERSION setup complete"
  exit 0
else
  echo "unable to verify Packer v$VERSION"
  exit 1
fi
